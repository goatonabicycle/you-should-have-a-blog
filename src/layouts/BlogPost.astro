---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";

type Props = CollectionEntry<"blog">["data"] & {
	wordCount?: number;
	vowelCount?: number;
	consonantCount?: number;
	sentenceCount?: number;
};

const {
	title,
	description,
	pubDate,
	updatedDate,
	wordCount,
	vowelCount,
	consonantCount,
	sentenceCount,
	socialImage,
} = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead 
			title={title} 
			description={description} 
			image={socialImage} 
			ogType="article" 
			articleDate={pubDate} 
		/>
		<style>
			.prose {
				color: var(--ink);
				position: relative;
			}

			.title {
				margin-bottom: 2em;
				text-align: center;
				padding-bottom: 1.5em;
				border-bottom: 1px solid var(--border);
			}
			.title h1 {
				margin: 0 0 0.5rem 0;
				font-size: 1.8em;
				color: var(--color-accent);
				font-weight: 700;
				border-bottom: none;
				padding-bottom: 0;
			}
			.date {
				color: var(--color-dim);
				font-size: 0.85em;
			}
			.last-updated-on {
				font-style: italic;
				margin-top: 0.3em;
				font-size: 0.85em;
			}
			.post-stats {
				color: var(--color-dim);
				font-size: 0.8em;
				margin-top: 0.5em;
				line-height: 1.6;
			}
			.stat-group {
				margin: 0.2em 0;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article class="prose">
				<div class="title">
					<h1>{title}</h1>
					<div class="date">
						<FormattedDate date={pubDate} showDaysAgo={true} />
						{
							updatedDate && (
								<div class="last-updated-on">
									Last updated on <FormattedDate date={updatedDate} />
								</div>
							)
						}
					</div>
					<div class="post-stats">
						<div class="stat-group">
							{wordCount && `${wordCount} words`}
							{sentenceCount && `· ${sentenceCount} sentences`}
						</div>
						<div class="stat-group">
							{vowelCount && `${vowelCount} vowels`}
							{consonantCount && `· ${consonantCount} consonants`}
						</div>
					</div>
				</div>
				<slot />
			</article>
		</main>
		<Footer />

		<script>
			// Handle keyboard navigation
			document.addEventListener("keydown", (e) => {
				// Backspace goes back
				if (
					e.key === "Backspace" &&
					document.activeElement.tagName !== "INPUT" &&
					document.activeElement.tagName !== "TEXTAREA"
				) {
					e.preventDefault();
					history.back();
				}
			});
		</script>
	</body>
</html>
